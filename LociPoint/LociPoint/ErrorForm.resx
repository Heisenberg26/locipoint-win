<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAA
        AAMAAAAEAAAABAAAAAMAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAwAA
        AAAAAAAAAAAAAwAAACEAAABCAAAAUwAAAFMAAABCAAAAIgAAAAMAAAAAAAAAAAAAAAMAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAIAAAAAAAAAKgAAAIwAAADWAAAA+gAAAP8AAAD/AAAA/wAAAP8AAAD6AAAA1gAAAI0AAAAqAAAAAAAA
        AAIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAGQAAAKIAAAD8AAAA/wAAAP8AAAD/AAAA/QAAAPwAAAD8AAAA/QAAAP8AAAD/AAAA/wAA
        APwAAACiAAAAGQAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAEgAAADrAAAA/wAAAP0AAAD7AAAA/QAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP0AAAD7AAAA/QAAAP8AAADsAAAASAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAABeAAAA/wAAAP4AAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA+wAAAP4AAAD/AAAAXgAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAASwAAAP8AAAD9AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        APsAAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP0AAAD/AAAASwAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABwAAADoAAAA/wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAADoAAAAHAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAoAAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD9AAAA/wAAAMcAAABPAAAATwAAAMcAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAA
        AP8AAACfAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAACAAAAAAAAAC4AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAD/AAAAqQAAAAAAAAAAAAAAqQAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAAuAAAAAAAAAAIAAAAAAAAAAAAAAAQAAAAAAAAAiwAAAP8AAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAP8AAACwAAAACgAAAAoAAACwAAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAIsAAAAAAAAABAAAAAAAAAABAAAAAAAAAAEAAADTAAAA/wAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPgAAADpAAAA6QAAAPgAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAA0wAAAAEAAAAAAAAAAQAAAAIAAAAAAAAAIgAA
        APkAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD5AAAAIgAAAAAAAAACAAAAAwAA
        AAAAAABBAAAA/wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADiAAAApAAA
        AKQAAADiAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAABBAAAAAAAA
        AAMAAAAEAAAAAAAAAFMAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAA
        AKkAAAAAAAAAAAAAAKkAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAA
        AFIAAAAAAAAABAAAAAQAAAAAAAAAUwAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAAD/AAAAqwAAAAAAAAAAAAAAqwAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APwAAAD/AAAAUgAAAAAAAAAEAAAAAwAAAAAAAABBAAAA/wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA+wAAAP8AAACpAAAAAAAAAAAAAACpAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAP8AAABBAAAAAAAAAAMAAAACAAAAAAAAACIAAAD5AAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAKkAAAAAAAAAAAAAAKkAAAD/AAAA+wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD/AAAA+QAAACIAAAAAAAAAAgAAAAEAAAAAAAAAAQAAANMAAAD/AAAA/QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAqQAAAAAAAAAAAAAAqQAAAP8AAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAADTAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAiwAA
        AP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAACrAAAAAAAAAAAAAACrAAAA/wAA
        APsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAIsAAAAAAAAABAAAAAAAAAAAAAAAAgAA
        AAAAAAAuAAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAKkAAAAAAAAAAAAA
        AKkAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAALgAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAACgAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAAxgAA
        AE4AAABOAAAAxgAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAKAAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABwAAADoAAAA/wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAADoAAAAHAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEsAAAD/AAAA/QAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD7AAAA+wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD9AAAA/wAA
        AEsAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAF4AAAD/AAAA/gAA
        APsAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD7AAAA/gAA
        AP8AAABeAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AEgAAADsAAAA/wAAAP0AAAD7AAAA/QAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP0AAAD7AAAA/QAA
        AP8AAADsAAAASQAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAABkAAACiAAAA/AAAAP8AAAD/AAAA/wAAAP0AAAD8AAAA/AAAAP0AAAD/AAAA/wAA
        AP8AAAD8AAAAowAAABkAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAgAAAAAAAAAqAAAAjQAAANYAAAD6AAAA/wAAAP8AAAD/AAAA/wAA
        APoAAADXAAAAjQAAACoAAAAAAAAAAgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAwAAAAAAAAAAAAAAAwAAACEAAABCAAAAUwAA
        AFMAAABCAAAAIgAAAAMAAAAAAAAAAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAwAAAAQAAAAEAAAAAwAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/9AL//5Fo3/9MAy/8kACT+kAAJfqAABX1AAAK6gAABWQAAAJkAAACSAB
        gAQgAAAEQAAAAkAAAAJAAAACQAGAAkABgAJAAYACQAGAAkABgAIgAYAEIAGABJAAAAmQAAAJqAAAFdQA
        ACvqAABX6QAAl/JAAk/9MAy//sWjf//QC/8=
</value>
  </data>
</root>